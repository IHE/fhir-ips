<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2013sp1

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns0="http://hl7.org/fhir" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="ns0 xs fn">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<Lista>
			<xsl:attribute name="xsi:noNamespaceSchemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance" select="'C:/msys64/home/Giorgio/_github/fhir-ips-lm/_other/conf_sample.xsd'"/>
			<xsl:for-each select="ns0:StructureDefinition/ns0:differential/ns0:element">
				<xsl:variable name="var1_extension" as="node()*" select="ns0:extension"/>
				<xsl:variable name="var2_id" as="node()?" select="@id"/>
				<xsl:variable name="var4_resultof_map" as="xs:boolean*">
					<xsl:for-each select="$var1_extension">
						<xsl:variable name="var3_resultof_map" as="xs:boolean?">
							<xsl:for-each select="ns0:valueCode">
								<xsl:sequence select="fn:exists(@value)"/>
							</xsl:for-each>
						</xsl:variable>
						<xsl:sequence select="fn:exists($var3_resultof_map[.])"/>
					</xsl:for-each>
				</xsl:variable>
				<xsl:variable name="var5_resultof_any" as="xs:boolean" select="fn:exists($var4_resultof_map[.])"/>
				<item>
					<xsl:if test="fn:exists($var2_id)">
						<name>
							<xsl:sequence select="fn:string($var2_id)"/>
						</name>
					</xsl:if>
					<xsl:variable name="var9_result" as="xs:boolean">
						<xsl:choose>
							<xsl:when test="$var5_resultof_any">
								<xsl:variable name="var7_resultof_map" as="xs:boolean*">
									<xsl:for-each select="$var1_extension">
										<xsl:variable name="var6_resultof_map" as="xs:boolean?">
											<xsl:for-each select="ns0:valueCode">
												<xsl:sequence select="fn:exists(@value)"/>
											</xsl:for-each>
										</xsl:variable>
										<xsl:sequence select="fn:exists($var6_resultof_map[.])"/>
									</xsl:for-each>
								</xsl:variable>
								<xsl:sequence select="fn:exists($var7_resultof_map[.])"/>
							</xsl:when>
							<xsl:otherwise>
								<xsl:sequence select="fn:true()"/>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:if test="$var9_result">
						<conf>
							<xsl:choose>
								<xsl:when test="$var5_resultof_any">
									<xsl:variable name="var8_resultof_map" as="xs:string*">
										<xsl:for-each select="($var1_extension/ns0:valueCode)[fn:exists(@value)]">
											<xsl:sequence select="fn:string(@value)"/>
										</xsl:for-each>
									</xsl:variable>
									<xsl:sequence select="xs:string(fn:string-join(for $x in $var8_resultof_map return xs:string($x), ' '))"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="'ND'"/>
								</xsl:otherwise>
							</xsl:choose>
						</conf>
					</xsl:if>
				</item>
			</xsl:for-each>
		</Lista>
	</xsl:template>
</xsl:stylesheet>
